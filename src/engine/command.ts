import { HearManager } from "@vk-io/hear";
import { IQuestionMessageContext } from "vk-io-question";
const rq = require("prequest");
export function registerCommandRoutes(hearManager: HearManager<IQuestionMessageContext>): void {
    /*hearManager.hear(/!–ø–æ–≥–æ–¥–∞/, async (context) => {
        if (context.isOutbox == false && context.senderId == root && context?.text != undefined) {
            let match = context.text.match(/^(?:!–ø–æ–≥–æ–¥–∞|!weather)\s?(.*)/i);
            if(match[1].toLowerCase() == "") return context.send(`nope`)
            rq("http://api.openweathermap.org/data/2.5/weather?q=" + encodeURIComponent(match[1]) + "&lang=ru&units=metric&appid=5d8820e4be0b3f1818880ef51406c9ee")
            .then((res) => {
            let Utils = {
            filter: (text) => {
            text = text.replace(/^(RU)/i, '–†–æ—Å—Å–∏—è')
            text = text.replace(/^(UA)/i, '–£–∫—Ä–∞–∏–Ω–∞')
            text = text.replace(/^(BY)/i, '–ë–µ–ª–∞—Ä—É—Å—å')
            text = text.replace(/^(US)/i, '–°–®–ê')
            text = text.replace(/^(KZ)/i, '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω')
            text = text.replace(/^(CN)/i, '–ö–∏—Ç–∞–π')
            text = text.replace(/^(CN)/i, '–ö–∏—Ç–∞–π')
            text = text.replace(/^(GB)/i, '–ê–Ω–≥–ª–∏—è')
            text = text.replace(/^(AE)/i, '–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –ê—Ä–∞–±—Å–∫–∏–µ –≠–º–∏—Ä–∞—Ç—ã')
            text = text.replace(/^(AQ)/i, '–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞')
            text = text.replace(/^(stations)/i, '—Å—Ç–∞–Ω—Ü–∏—è')
            return text;
            }};
            function TempTo () {
            if(res.main.temp < -10) return '–æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ'
            else if(res.main.temp < -5) return '—Ö–æ–ª–æ–¥–Ω–æ'
            else if(res.main.temp < 5) return '—Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ'
            else if(res.main.temp < 20) return '–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ'
            else if(res.main.temp < 25) return '—Ç–µ–ø–ª–æ'
            else if(res.main.temp < 30) return '–∂–∞—Ä–∫–æ'
            else if(res.main.temp < 50) return '–û—á–µ–Ω—å –∂–∞—Ä–∫–æ'
            };
            function Timer () {
            let now = new Date(res.dt*1000).getHours();
            if(now > 18) return 'üåÜ'
            else if(now > 22) return 'üåÉ'
            else if(now > 0) return 'üåÉ'
            else if(now < 6) return 'üåÖ'
            else if(now < 12) return 'üèû'
            };
            var sunrise = new Date(res.sys.sunrise*1000);
            var sunset = new Date(res.sys.sunset*1000);
            function sunmin () {
            if(sunrise.getMinutes() < 10) "0" + sunrise.getMinutes();
            return sunset.getMinutes();
            };
            function sunsmin () {
            if(sunset.getMinutes() < 10) "0" + sunset.getMinutes();
            return sunset.getMinutes();
            };
            function daterh () {
            if(date.getHours() < 10) "0" + date.getHours();
            return date.getHours()+3
            };
            function daterm () {
            if(date.getMinutes() < 10) "0" + date.getMinutes();
            return date.getMinutes();
            };
            var date = new Date(res.dt*1000);
            return context.reply(`${Timer()} ${res.name}, ${Utils.filter(res.sys.country)}

            ‚ûñ –ü–æ–≥–æ–¥–∞: ${res["weather"][0]["description"]} ,${res["weather"][0]["main"]}
            ‚ûñ –±–∞–∑–∞: ${Utils.filter(res.base)}
            ‚ûñ –°–µ–π—á–∞—Å —Ç–∞–º ${TempTo()}: ${res.main.temp}¬∞–°
            ‚ûñ –†–∞—Å—Å–≤–µ—Ç: ${sunrise.getHours()+res.timezone/3600}:${sunmin()} (–ú–µ—Å—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
            ‚ûñ –ó–∞–∫–∞—Ç: ${sunset.getHours()+res.timezone/3600}:${sunsmin()} (–ú–µ—Å—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
            ‚ûñ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${res.wind.speed} –º/—Å
            ‚ûñ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ ${res.wind.deg}
            ‚ûñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${res.main.temp_max}¬∞–°
            ‚ûñ –≤–ª–∞–∂–Ω–æ—Å—Ç—å ${res.main.humidity}%
            ‚ûñ –æ–±–ª–∞—á–Ω–æ—Å—Ç—å ${res.clouds.all}%
            ‚ûñ –î–∞–≤–ª–µ–Ω–∏–µ:  ${Math.floor(res.main.pressure / 1.33333)} –º–º–†—Ç.–°—Ç
            ‚ûñ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è ${res.name}
            ‚ûñ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${res.main.temp_min}¬∞–°
            ‚ûñ —Å–¥–≤–∏–≥ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∞—Å–∞—Ö –æ—Ç utc —Ä–∞–≤–µ–Ω ${res.timezone/3600}`)}).catch((error) => { context.reply(`–≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);})       
        }
    })*/
}